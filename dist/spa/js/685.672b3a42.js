"use strict";(globalThis["webpackChunkquasar"]=globalThis["webpackChunkquasar"]||[]).push([[685],{3685:(s,l,i)=>{i.r(l),i.d(l,{default:()=>e});var a=i(9835);const r=(0,a.uE)('<p class="text-body2"> Quasar Framework의 폴더 구조는 기본적으로 Vue.js 프로젝트 구조와 비슷하지만 몇 가지 추가 폴더와 파일이 있습니다. </p><h4>root</h4><ul class="list"><li> quasar.conf.js: Quasar 프로젝트 설정 파일로, 프로젝트 설정, 빌드 구성, 플러그인 등을 정의할 수 있습니다. </li><li>tsconfig.json: typescript의 compiler Option을 설정할 수 있습니다.</li></ul><h4>public</h4><ul class="list"><li>public/: 정적 파일 (예: favicon.ico)을 저장하는 폴더입니다.</li></ul><h4>src</h4><ul class="list"><li> src: 소스 코드가 들어 있는 주요 폴더입니다. 아래와 같은 하위 폴더가 포함됩니다. </li><li>src/components/: 재사용 가능한 Vue 컴포넌트를 저장하는 폴더입니다.</li><li> src/layouts/: 레이아웃 컴포넌트가 있는 폴더입니다. 이 컴포넌트는 페이지 레이아웃을 정의하는 데 사용됩니다. </li><li> src/pages/: 애플리케이션의 페이지 컴포넌트가 있는 폴더입니다. 각 페이지에 대한 라우트가 여기에 정의됩니다. </li><li>src/assets/: 이미지 및 기타 리소스 파일을 저장하는 폴더입니다.</li><li> src/boot/: 애플리케이션 시작 시 실행될 부트스트랩 파일을 저장하는 폴더입니다. </li><li>src/stores/: 스토어 모듈을 저장하는 폴더입니다.</li><li>src/router/: 애플리케이션 라우터 설정 파일을 저장하는 폴더입니다.</li></ul><h4>dist</h4><ul class="list"><li>dist/: 빌드된 애플리케이션 파일이 저장되는 폴더입니다.</li></ul><p class="text-body2"> 위 사항은 기본적인 Quasar Framework 프로젝트 구조와 설정에 대한 개요입니다. 프로젝트를 진행하면서 필요한 추가 구성 및 폴더를 사용하여 개발하실 수 있습니다. <a href="https://quasar.dev/" target="_blank">Quasar Docs</a>에서 더 자세한 정보를 얻을 수 있으며, <mark>프로젝트 요구사항에 맞게 프로젝트를 구성 및 확장</mark>할 수 있습니다. </p>',10);function t(s,l){return r}var c=i(1639);const u={},o=(0,c.Z)(u,[["render",t]]),e=o}}]);