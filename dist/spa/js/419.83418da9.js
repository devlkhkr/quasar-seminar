"use strict";(globalThis["webpackChunkquasar"]=globalThis["webpackChunkquasar"]||[]).push([[419],{3419:(e,n,t)=>{t.r(n),t.d(n,{default:()=>g});var r=t(9835),a=t(499),s=t(1052);const u=(0,r._)("h4",null,"라우터 설정 파일에서 동적 라우트 정의",-1),o=(0,r._)("h4",null,"동적 라우트로 컴포넌트에 매개변수 전달",-1),l=(0,r._)("h4",null,"컴포넌트에서 params 받기",-1),c=(0,r._)("h4",null,"네비게이션 가드",-1),i="//UserProfile.vue\n<template>\n  <div>\n    <h1>User Profile</h1>\n    <p>User ID: {{ userId }}</p>\n  </div>\n</template>\n\n<script lang='ts' setup>\nconst route = useRoute();\nconst userId = route.query.userId;\n\n",h="const routes = [\n  {\n    path: '/user/:userId',\n    name: 'UserProfile',\n    component: () => import('pages/UserProfile.vue'),\n    props: true //동적 매개변수를 컴포넌트 프로퍼티로 전달\n  },\n  {\n    path: '/cart/:userId?', //매개변수 뒤에 물음표를 붙이면 필수아님\n    name: 'UserProfile',\n    component: () => import('pages/UserProfile.vue'),\n    props: true\n  },\n]\n",d="const router = createRouter({\n//...\nrouter.beforeEach((to, from, next) => {\n  $q.loading.show(); //로딩 생성\n  const isAuthenticated = checkAuthentication(); // 인증 확인 로직\n  if (to.meta.requiresAuth && !isAuthenticated) {\n    next('/login'); //인증이 필요한 페이지로 이동\n  } else {\n    next(); // 계속 진행\n  }\n})\n\nrouter.afterEach((to, from, next) => {\n  $q.loading.hide(); //로딩 제거\n})\n//...\n  ",p=(0,r.aZ)({__name:"DynamicRouting",setup(e){return(e,n)=>((0,r.wg)(),(0,r.iD)(r.HY,null,[u,(0,r.Wm)((0,a.SU)(s.t),{class:"code",codeValue:h,theme:"dark",lang:"vue"}),o,(0,r.Wm)((0,a.SU)(s.t),{class:"code",codeValue:"this.$router.push({ name: 'UserProfile', params: { userId: '123' } });",theme:"dark",lang:"javascript",style:{height:"50px"}},null,8,["codeValue"]),l,(0,r.Wm)((0,a.SU)(s.t),{class:"code",codeValue:i,theme:"dark",lang:"vue"}),c,(0,r.Wm)((0,a.SU)(s.t),{class:"code",codeValue:d,theme:"dark",lang:"vue"})],64))}}),m=p,g=m}}]);